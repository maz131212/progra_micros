

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 13 22:12:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	nvBANK0
   212  002C                     __pnvBANK0:
   213  002C                     _v_tmr0:
   214  002C                     	ds	1
   215  0006                     _PORTB	set	6
   216  0005                     _PORTA	set	5
   217  0009                     _PORTE	set	9
   218  0007                     _PORTC	set	7
   219  0006                     _PORTBbits	set	6
   220  0008                     _PORTD	set	8
   221  0001                     _TMR0	set	1
   222  000B                     _INTCONbits	set	11
   223  005A                     _T0IF	set	90
   224  0081                     _OPTION_REGbits	set	129
   225  0096                     _IOCBbits	set	150
   226  0088                     _TRISD	set	136
   227  0086                     _TRISB	set	134
   228  0085                     _TRISA	set	133
   229  0087                     _TRISC	set	135
   230  0089                     _TRISE	set	137
   231  0189                     _ANSELH	set	393
   232  0188                     _ANSEL	set	392
   233                           
   234                           	psect	cinit
   235  000F                     start_initialization:	
   236                           ; #config settings
   237                           
   238  000F                     __initialization:
   239                           
   240                           ; Clear objects allocated to COMMON
   241  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   242  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   243  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   244                           
   245                           ; Clear objects allocated to BANK0
   246  0012  1283               	bcf	3,5	;RP0=0, select bank0
   247  0013  1303               	bcf	3,6	;RP1=0, select bank0
   248  0014  01A8               	clrf	__pbssBANK0& (0+127)
   249  0015  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   250  0016  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   251  0017  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   252  0018                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  0018                     __end_of__initialization:
   256  0018  0183               	clrf	3
   257  0019  120A  118A  2913   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0078                     __pbssCOMMON:
   261  0078                     _numero:
   262  0078                     	ds	1
   263  0079                     _b_dec:
   264  0079                     	ds	1
   265  007A                     _b_inc:
   266  007A                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269  0028                     __pbssBANK0:
   270  0028                     _unidades:
   271  0028                     	ds	1
   272  0029                     _decenas:
   273  0029                     	ds	1
   274  002A                     _centenas:
   275  002A                     	ds	1
   276  002B                     _count:
   277  002B                     	ds	1
   278                           
   279                           	psect	cstackCOMMON
   280  0070                     __pcstackCOMMON:
   281  0070                     ?_setup:
   282  0070                     ?_decimales:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_ISR:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ??_ISR:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296  0070                     	ds	3
   297  0073                     ??_setup:
   298  0073                     ?___bmul:	
   299                           ; 1 bytes @ 0x3
   300                           
   301  0073                     ?___awdiv:	
   302                           ; 1 bytes @ 0x3
   303                           
   304  0073                     ___bmul@multiplicand:	
   305                           ; 2 bytes @ 0x3
   306                           
   307  0073                     ___awdiv@divisor:	
   308                           ; 1 bytes @ 0x3
   309                           
   310                           
   311                           ; 2 bytes @ 0x3
   312  0073                     	ds	1
   313  0074                     ??___bmul:
   314                           
   315                           ; 1 bytes @ 0x4
   316  0074                     	ds	1
   317  0075                     ___bmul@product:
   318  0075                     ___awdiv@dividend:	
   319                           ; 1 bytes @ 0x5
   320                           
   321                           
   322                           ; 2 bytes @ 0x5
   323  0075                     	ds	1
   324  0076                     ___bmul@multiplier:
   325                           
   326                           ; 1 bytes @ 0x6
   327  0076                     	ds	1
   328  0077                     ??___awdiv:
   329                           
   330                           ; 1 bytes @ 0x7
   331  0077                     	ds	1
   332                           
   333                           	psect	cstackBANK0
   334  0020                     __pcstackBANK0:
   335  0020                     ___awdiv@counter:
   336                           
   337                           ; 1 bytes @ 0x0
   338  0020                     	ds	1
   339  0021                     ___awdiv@sign:
   340                           
   341                           ; 1 bytes @ 0x1
   342  0021                     	ds	1
   343  0022                     ___awdiv@quotient:
   344                           
   345                           ; 2 bytes @ 0x2
   346  0022                     	ds	2
   347  0024                     ??_decimales:
   348                           
   349                           ; 1 bytes @ 0x4
   350  0024                     	ds	3
   351  0027                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x7
   354  0027                     	ds	1
   355                           
   356                           	psect	maintext
   357  0113                     __pmaintext:	
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 79 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, pclath, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : B00/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          0       1       0       0       0
   380 ;;      Totals:         0       1       0       0       0
   381 ;;Total ram usage:        1 bytes
   382 ;; Hardware stack levels required when called:    3
   383 ;; This function calls:
   384 ;;		_decimales
   385 ;;		_setup
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _main
   393  0113                     _main:
   394  0113                     l987:	
   395                           ;incstack = 0
   396                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   397                           
   398                           
   399                           ;main.c: 82: }
   400  0113  120A  118A  20D8  120A  118A  	fcall	_setup
   401  0118                     l989:
   402                           
   403                           ;main.c: 89: ;main.c: 91: 
   404  0118  1283               	bcf	3,5	;RP0=0, select bank0
   405  0119  1303               	bcf	3,6	;RP1=0, select bank0
   406  011A  1C06               	btfss	6,0	;volatile
   407  011B  291D               	goto	u411
   408  011C  291E               	goto	u410
   409  011D                     u411:
   410  011D  2920               	goto	l69
   411  011E                     u410:
   412  011E                     l991:
   413                           
   414                           ;main.c: 92: ;main.c: 93:     TRISE = 0;
   415  011E  01FA               	clrf	_b_inc
   416  011F  0AFA               	incf	_b_inc,f
   417  0120                     l69:	
   418                           ;main.c: 94:     PORTE = 0;
   419                           
   420                           
   421                           ;main.c: 95: 
   422  0120  1806               	btfsc	6,0	;volatile
   423  0121  2923               	goto	u421
   424  0122  2924               	goto	u420
   425  0123                     u421:
   426  0123  292E               	goto	l999
   427  0124                     u420:
   428  0124                     l993:
   429  0124  037A               	decf	_b_inc,w
   430  0125  1D03               	btfss	3,2
   431  0126  2928               	goto	u431
   432  0127  2929               	goto	u430
   433  0128                     u431:
   434  0128  292E               	goto	l999
   435  0129                     u430:
   436  0129                     l995:
   437                           
   438                           ;main.c: 96:     TRISC = 0;;main.c: 97:     PORTC = 0;
   439  0129  01FA               	clrf	_b_inc
   440  012A                     l997:
   441                           
   442                           ;main.c: 98: 
   443  012A  3001               	movlw	1
   444  012B  00A7               	movwf	??_main
   445  012C  0827               	movf	??_main,w
   446  012D  0787               	addwf	7,f	;volatile
   447  012E                     l999:
   448                           
   449                           ;main.c: 101: 
   450  012E  1C86               	btfss	6,1	;volatile
   451  012F  2931               	goto	u441
   452  0130  2932               	goto	u440
   453  0131                     u441:
   454  0131  2934               	goto	l71
   455  0132                     u440:
   456  0132                     l1001:
   457                           
   458                           ;main.c: 102:     TRISB = 0;;main.c: 103:     PORTB = 0;
   459  0132  01F9               	clrf	_b_dec
   460  0133  0AF9               	incf	_b_dec,f
   461  0134                     l71:	
   462                           ;main.c: 104: 
   463                           
   464                           
   465                           ;main.c: 105:     TRISD = 0;
   466  0134  1886               	btfsc	6,1	;volatile
   467  0135  2937               	goto	u451
   468  0136  2938               	goto	u450
   469  0137                     u451:
   470  0137  2940               	goto	l1009
   471  0138                     u450:
   472  0138                     l1003:
   473  0138  0379               	decf	_b_dec,w
   474  0139  1D03               	btfss	3,2
   475  013A  293C               	goto	u461
   476  013B  293D               	goto	u460
   477  013C                     u461:
   478  013C  2940               	goto	l1009
   479  013D                     u460:
   480  013D                     l1005:
   481                           
   482                           ;main.c: 106:     PORTD = 0;;main.c: 107: 
   483  013D  01F9               	clrf	_b_dec
   484  013E                     l1007:
   485                           
   486                           ;main.c: 108:     ANSEL = 0;
   487  013E  3001               	movlw	1
   488  013F  0287               	subwf	7,f	;volatile
   489  0140                     l1009:
   490                           
   491                           ;main.c: 111: 
   492  0140  120A  118A  2085  120A  118A  	fcall	_decimales
   493  0145  2918               	goto	l989
   494  0146  120A  118A  280C   	ljmp	start
   495  0149                     __end_of_main:
   496                           
   497                           	psect	text1
   498  00D8                     __ptext1:	
   499 ;; *************** function _setup *****************
   500 ;; Defined at:
   501 ;;		line 123 in file "main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0
   517 ;;      Temps:          1       0       0       0       0
   518 ;;      Totals:         1       0       0       0       0
   519 ;;Total ram usage:        1 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           
   530                           ;psect for function _setup
   531  00D8                     _setup:
   532  00D8                     l883:	
   533                           ;incstack = 0
   534                           ; Regs used in _setup: [wreg+status,2]
   535                           
   536                           
   537                           ;main.c: 125:     OPTION_REGbits.PS2 = 1;
   538  00D8  30EC               	movlw	236
   539  00D9  00F3               	movwf	??_setup
   540  00DA  0873               	movf	??_setup,w
   541  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   542  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   543  00DD  00AC               	movwf	_v_tmr0
   544  00DE                     l885:
   545                           
   546                           ;main.c: 128:     TMR0 = v_tmr0;
   547  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   548  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   549  00E0  0189               	clrf	9	;volatile
   550  00E1                     l887:
   551                           
   552                           ;main.c: 129: 
   553  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   554  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   555  00E3  0189               	clrf	9	;volatile
   556  00E4                     l889:
   557                           
   558                           ;main.c: 131: 
   559  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   560  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   561  00E6  0187               	clrf	7	;volatile
   562  00E7                     l891:
   563                           
   564                           ;main.c: 132: }
   565  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   566  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   567  00E9  0187               	clrf	7	;volatile
   568  00EA                     l893:
   569                           
   570                           ;main.c: 134: 
   571  00EA  1683               	bsf	3,5	;RP0=1, select bank1
   572  00EB  1303               	bcf	3,6	;RP1=0, select bank1
   573  00EC  0185               	clrf	5	;volatile
   574  00ED                     l895:
   575                           
   576                           ;main.c: 135: 
   577  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   578  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   579  00EF  0185               	clrf	5	;volatile
   580  00F0                     l897:
   581                           
   582                           ;main.c: 137: 
   583  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   584  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   585  00F2  0186               	clrf	6	;volatile
   586  00F3                     l899:
   587                           
   588                           ;main.c: 138: void decimales(void)
   589  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   590  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   591  00F5  0186               	clrf	6	;volatile
   592  00F6                     l901:
   593                           
   594                           ;main.c: 140:     numero = PORTC;
   595  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   596  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   597  00F8  0188               	clrf	8	;volatile
   598  00F9                     l903:
   599                           
   600                           ;main.c: 141: 
   601  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   602  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   603  00FB  0188               	clrf	8	;volatile
   604  00FC                     l905:
   605                           
   606                           ;main.c: 143: 
   607  00FC  1683               	bsf	3,5	;RP0=1, select bank3
   608  00FD  1703               	bsf	3,6	;RP1=1, select bank3
   609  00FE  0188               	clrf	8	;volatile
   610  00FF                     l907:
   611                           
   612                           ;main.c: 144:     numero = numero - (centenas*100);
   613  00FF  0189               	clrf	9	;volatile
   614  0100                     l909:
   615                           
   616                           ;main.c: 147: 
   617  0100  178B               	bsf	11,7	;volatile
   618  0101                     l911:
   619                           
   620                           ;main.c: 148:     unidades = numero - (decenas*10);
   621  0101  158B               	bsf	11,3	;volatile
   622  0102                     l913:
   623                           
   624                           ;main.c: 149: 
   625  0102  168B               	bsf	11,5	;volatile
   626  0103                     l915:
   627  0103  100B               	bcf	11,0	;volatile
   628  0104                     l917:
   629  0104  110B               	bcf	11,2	;volatile
   630  0105                     l919:
   631  0105  1683               	bsf	3,5	;RP0=1, select bank1
   632  0106  1303               	bcf	3,6	;RP1=0, select bank1
   633  0107  1416               	bsf	22,0	;volatile
   634  0108                     l921:
   635  0108  1496               	bsf	22,1	;volatile
   636  0109                     l923:
   637  0109  1281               	bcf	1,5	;volatile
   638  010A                     l925:
   639  010A  1181               	bcf	1,3	;volatile
   640  010B                     l927:
   641  010B  1501               	bsf	1,2	;volatile
   642  010C                     l929:
   643  010C  1481               	bsf	1,1	;volatile
   644  010D                     l931:
   645  010D  1401               	bsf	1,0	;volatile
   646  010E  1283               	bcf	3,5	;RP0=0, select bank0
   647  010F  1303               	bcf	3,6	;RP1=0, select bank0
   648  0110  082C               	movf	_v_tmr0,w
   649  0111  0081               	movwf	1	;volatile
   650  0112                     l78:
   651  0112  0008               	return
   652  0113                     __end_of_setup:
   653                           
   654                           	psect	text2
   655  0085                     __ptext2:	
   656 ;; *************** function _decimales *****************
   657 ;; Defined at:
   658 ;;		line 173 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       3       0       0       0
   675 ;;      Totals:         0       3       0       0       0
   676 ;;Total ram usage:        3 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    2
   679 ;; This function calls:
   680 ;;		___awdiv
   681 ;;		___bmul
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _decimales
   689  0085                     _decimales:
   690  0085                     l977:	
   691                           ;incstack = 0
   692                           ; Regs used in _decimales: [wreg+status,2+status,0+pclath+cstack]
   693                           
   694  0085  1283               	bcf	3,5	;RP0=0, select bank0
   695  0086  1303               	bcf	3,6	;RP1=0, select bank0
   696  0087  0807               	movf	7,w	;volatile
   697  0088  00A4               	movwf	??_decimales
   698  0089  0824               	movf	??_decimales,w
   699  008A  00F8               	movwf	_numero
   700  008B                     l979:
   701  008B  3064               	movlw	100
   702  008C  00F3               	movwf	___awdiv@divisor
   703  008D  3000               	movlw	0
   704  008E  00F4               	movwf	___awdiv@divisor+1
   705  008F  0878               	movf	_numero,w
   706  0090  00A4               	movwf	??_decimales
   707  0091  01A5               	clrf	??_decimales+1
   708  0092  0824               	movf	??_decimales,w
   709  0093  00F5               	movwf	___awdiv@dividend
   710  0094  0825               	movf	??_decimales+1,w
   711  0095  00F6               	movwf	___awdiv@dividend+1
   712  0096  120A  118A  201C  120A  118A  	fcall	___awdiv
   713  009B  0873               	movf	?___awdiv,w
   714  009C  1283               	bcf	3,5	;RP0=0, select bank0
   715  009D  1303               	bcf	3,6	;RP1=0, select bank0
   716  009E  00A6               	movwf	??_decimales+2
   717  009F  0826               	movf	??_decimales+2,w
   718  00A0  00AA               	movwf	_centenas
   719  00A1                     l981:
   720  00A1  309C               	movlw	156
   721  00A2  00A4               	movwf	??_decimales
   722  00A3  0824               	movf	??_decimales,w
   723  00A4  00F3               	movwf	___bmul@multiplicand
   724  00A5  082A               	movf	_centenas,w
   725  00A6  120A  118A  2162  120A  118A  	fcall	___bmul
   726  00AB  0778               	addwf	_numero,w
   727  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   728  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   729  00AE  00A5               	movwf	??_decimales+1
   730  00AF  0825               	movf	??_decimales+1,w
   731  00B0  00F8               	movwf	_numero
   732  00B1                     l983:
   733  00B1  300A               	movlw	10
   734  00B2  00F3               	movwf	___awdiv@divisor
   735  00B3  3000               	movlw	0
   736  00B4  00F4               	movwf	___awdiv@divisor+1
   737  00B5  0878               	movf	_numero,w
   738  00B6  00A4               	movwf	??_decimales
   739  00B7  01A5               	clrf	??_decimales+1
   740  00B8  0824               	movf	??_decimales,w
   741  00B9  00F5               	movwf	___awdiv@dividend
   742  00BA  0825               	movf	??_decimales+1,w
   743  00BB  00F6               	movwf	___awdiv@dividend+1
   744  00BC  120A  118A  201C  120A  118A  	fcall	___awdiv
   745  00C1  0873               	movf	?___awdiv,w
   746  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   747  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   748  00C4  00A6               	movwf	??_decimales+2
   749  00C5  0826               	movf	??_decimales+2,w
   750  00C6  00A9               	movwf	_decenas
   751  00C7                     l985:
   752  00C7  30F6               	movlw	246
   753  00C8  00A4               	movwf	??_decimales
   754  00C9  0824               	movf	??_decimales,w
   755  00CA  00F3               	movwf	___bmul@multiplicand
   756  00CB  0829               	movf	_decenas,w
   757  00CC  120A  118A  2162  120A  118A  	fcall	___bmul
   758  00D1  0778               	addwf	_numero,w
   759  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   760  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   761  00D4  00A5               	movwf	??_decimales+1
   762  00D5  0825               	movf	??_decimales+1,w
   763  00D6  00A8               	movwf	_unidades
   764  00D7                     l81:
   765  00D7  0008               	return
   766  00D8                     __end_of_decimales:
   767                           
   768                           	psect	text3
   769  0162                     __ptext3:	
   770 ;; *************** function ___bmul *****************
   771 ;; Defined at:
   772 ;;		line 4 in file "/Applications/microchip/xc8/v2.31/pic/sources/c90/common/Umul8.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  multiplier      1    wreg     unsigned char 
   775 ;;  multiplicand    1    3[COMMON] unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  multiplier      1    6[COMMON] unsigned char 
   778 ;;  product         1    5[COMMON] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      unsigned char 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         1       0       0       0       0
   789 ;;      Locals:         2       0       0       0       0
   790 ;;      Temps:          1       0       0       0       0
   791 ;;      Totals:         4       0       0       0       0
   792 ;;Total ram usage:        4 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_decimales
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function ___bmul
   804  0162                     ___bmul:
   805                           
   806                           ;incstack = 0
   807                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   808                           ;___bmul@multiplier stored from wreg
   809  0162  00F6               	movwf	___bmul@multiplier
   810  0163                     l825:
   811  0163  01F5               	clrf	___bmul@product
   812  0164                     l827:
   813  0164  1C76               	btfss	___bmul@multiplier,0
   814  0165  2967               	goto	u211
   815  0166  2968               	goto	u210
   816  0167                     u211:
   817  0167  296C               	goto	l831
   818  0168                     u210:
   819  0168                     l829:
   820  0168  0873               	movf	___bmul@multiplicand,w
   821  0169  00F4               	movwf	??___bmul
   822  016A  0874               	movf	??___bmul,w
   823  016B  07F5               	addwf	___bmul@product,f
   824  016C                     l831:
   825  016C  1003               	clrc
   826  016D  0DF3               	rlf	___bmul@multiplicand,f
   827  016E                     l833:
   828  016E  1003               	clrc
   829  016F  0CF6               	rrf	___bmul@multiplier,f
   830  0170  0876               	movf	___bmul@multiplier,w
   831  0171  1D03               	btfss	3,2
   832  0172  2974               	goto	u221
   833  0173  2975               	goto	u220
   834  0174                     u221:
   835  0174  2964               	goto	l827
   836  0175                     u220:
   837  0175                     l835:
   838  0175  0875               	movf	___bmul@product,w
   839  0176                     l193:
   840  0176  0008               	return
   841  0177                     __end_of___bmul:
   842                           
   843                           	psect	text4
   844  001C                     __ptext4:	
   845 ;; *************** function ___awdiv *****************
   846 ;; Defined at:
   847 ;;		line 5 in file "/Applications/microchip/xc8/v2.31/pic/sources/c90/common/awdiv.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  divisor         2    3[COMMON] int 
   850 ;;  dividend        2    5[COMMON] int 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  quotient        2    2[BANK0 ] int 
   853 ;;  sign            1    1[BANK0 ] unsigned char 
   854 ;;  counter         1    0[BANK0 ] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2    3[COMMON] int 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         4       0       0       0       0
   865 ;;      Locals:         0       4       0       0       0
   866 ;;      Temps:          1       0       0       0       0
   867 ;;      Totals:         5       4       0       0       0
   868 ;;Total ram usage:        9 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_decimales
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function ___awdiv
   880  001C                     ___awdiv:
   881  001C                     l839:	
   882                           ;incstack = 0
   883                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   884                           
   885  001C  1283               	bcf	3,5	;RP0=0, select bank0
   886  001D  1303               	bcf	3,6	;RP1=0, select bank0
   887  001E  01A1               	clrf	___awdiv@sign
   888  001F                     l841:
   889  001F  1FF4               	btfss	___awdiv@divisor+1,7
   890  0020  2822               	goto	u231
   891  0021  2823               	goto	u230
   892  0022                     u231:
   893  0022  282A               	goto	l847
   894  0023                     u230:
   895  0023                     l843:
   896  0023  09F3               	comf	___awdiv@divisor,f
   897  0024  09F4               	comf	___awdiv@divisor+1,f
   898  0025  0AF3               	incf	___awdiv@divisor,f
   899  0026  1903               	skipnz
   900  0027  0AF4               	incf	___awdiv@divisor+1,f
   901  0028                     l845:
   902  0028  01A1               	clrf	___awdiv@sign
   903  0029  0AA1               	incf	___awdiv@sign,f
   904  002A                     l847:
   905  002A  1FF6               	btfss	___awdiv@dividend+1,7
   906  002B  282D               	goto	u241
   907  002C  282E               	goto	u240
   908  002D                     u241:
   909  002D  2837               	goto	l853
   910  002E                     u240:
   911  002E                     l849:
   912  002E  09F5               	comf	___awdiv@dividend,f
   913  002F  09F6               	comf	___awdiv@dividend+1,f
   914  0030  0AF5               	incf	___awdiv@dividend,f
   915  0031  1903               	skipnz
   916  0032  0AF6               	incf	___awdiv@dividend+1,f
   917  0033                     l851:
   918  0033  3001               	movlw	1
   919  0034  00F7               	movwf	??___awdiv
   920  0035  0877               	movf	??___awdiv,w
   921  0036  06A1               	xorwf	___awdiv@sign,f
   922  0037                     l853:
   923  0037  01A2               	clrf	___awdiv@quotient
   924  0038  01A3               	clrf	___awdiv@quotient+1
   925  0039                     l855:
   926  0039  0873               	movf	___awdiv@divisor,w
   927  003A  0474               	iorwf	___awdiv@divisor+1,w
   928  003B  1903               	btfsc	3,2
   929  003C  283E               	goto	u251
   930  003D  283F               	goto	u250
   931  003E                     u251:
   932  003E  2876               	goto	l875
   933  003F                     u250:
   934  003F                     l857:
   935  003F  01A0               	clrf	___awdiv@counter
   936  0040  0AA0               	incf	___awdiv@counter,f
   937  0041  284D               	goto	l863
   938  0042                     l859:
   939  0042  3001               	movlw	1
   940  0043                     u265:
   941  0043  1003               	clrc
   942  0044  0DF3               	rlf	___awdiv@divisor,f
   943  0045  0DF4               	rlf	___awdiv@divisor+1,f
   944  0046  3EFF               	addlw	-1
   945  0047  1D03               	skipz
   946  0048  2843               	goto	u265
   947  0049                     l861:
   948  0049  3001               	movlw	1
   949  004A  00F7               	movwf	??___awdiv
   950  004B  0877               	movf	??___awdiv,w
   951  004C  07A0               	addwf	___awdiv@counter,f
   952  004D                     l863:
   953  004D  1FF4               	btfss	___awdiv@divisor+1,7
   954  004E  2850               	goto	u271
   955  004F  2851               	goto	u270
   956  0050                     u271:
   957  0050  2842               	goto	l859
   958  0051                     u270:
   959  0051                     l865:
   960  0051  3001               	movlw	1
   961  0052                     u285:
   962  0052  1003               	clrc
   963  0053  0DA2               	rlf	___awdiv@quotient,f
   964  0054  0DA3               	rlf	___awdiv@quotient+1,f
   965  0055  3EFF               	addlw	-1
   966  0056  1D03               	skipz
   967  0057  2852               	goto	u285
   968  0058  0874               	movf	___awdiv@divisor+1,w
   969  0059  0276               	subwf	___awdiv@dividend+1,w
   970  005A  1D03               	skipz
   971  005B  285E               	goto	u295
   972  005C  0873               	movf	___awdiv@divisor,w
   973  005D  0275               	subwf	___awdiv@dividend,w
   974  005E                     u295:
   975  005E  1C03               	skipc
   976  005F  2861               	goto	u291
   977  0060  2862               	goto	u290
   978  0061                     u291:
   979  0061  2869               	goto	l871
   980  0062                     u290:
   981  0062                     l867:
   982  0062  0873               	movf	___awdiv@divisor,w
   983  0063  02F5               	subwf	___awdiv@dividend,f
   984  0064  0874               	movf	___awdiv@divisor+1,w
   985  0065  1C03               	skipc
   986  0066  03F6               	decf	___awdiv@dividend+1,f
   987  0067  02F6               	subwf	___awdiv@dividend+1,f
   988  0068                     l869:
   989  0068  1422               	bsf	___awdiv@quotient,0
   990  0069                     l871:
   991  0069  3001               	movlw	1
   992  006A                     u305:
   993  006A  1003               	clrc
   994  006B  0CF4               	rrf	___awdiv@divisor+1,f
   995  006C  0CF3               	rrf	___awdiv@divisor,f
   996  006D  3EFF               	addlw	-1
   997  006E  1D03               	skipz
   998  006F  286A               	goto	u305
   999  0070                     l873:
  1000  0070  3001               	movlw	1
  1001  0071  02A0               	subwf	___awdiv@counter,f
  1002  0072  1D03               	btfss	3,2
  1003  0073  2875               	goto	u311
  1004  0074  2876               	goto	u310
  1005  0075                     u311:
  1006  0075  2851               	goto	l865
  1007  0076                     u310:
  1008  0076                     l875:
  1009  0076  0821               	movf	___awdiv@sign,w
  1010  0077  1903               	btfsc	3,2
  1011  0078  287A               	goto	u321
  1012  0079  287B               	goto	u320
  1013  007A                     u321:
  1014  007A  2880               	goto	l879
  1015  007B                     u320:
  1016  007B                     l877:
  1017  007B  09A2               	comf	___awdiv@quotient,f
  1018  007C  09A3               	comf	___awdiv@quotient+1,f
  1019  007D  0AA2               	incf	___awdiv@quotient,f
  1020  007E  1903               	skipnz
  1021  007F  0AA3               	incf	___awdiv@quotient+1,f
  1022  0080                     l879:
  1023  0080  0823               	movf	___awdiv@quotient+1,w
  1024  0081  00F4               	movwf	?___awdiv+1
  1025  0082  0822               	movf	___awdiv@quotient,w
  1026  0083  00F3               	movwf	?___awdiv
  1027  0084                     l320:
  1028  0084  0008               	return
  1029  0085                     __end_of___awdiv:
  1030                           
  1031                           	psect	text5
  1032  0149                     __ptext5:	
  1033 ;; *************** function _ISR *****************
  1034 ;; Defined at:
  1035 ;;		line 58 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          3       0       0       0       0
  1052 ;;      Totals:         3       0       0       0       0
  1053 ;;Total ram usage:        3 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		Interrupt level 1
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _ISR
  1064  0149                     _ISR:
  1065  0149                     i1l943:
  1066                           
  1067                           ;main.c: 60:     if (PORTBbits.RB0 == 0 && b_inc == 1)
  1068  0149  1C0B               	btfss	11,0	;volatile
  1069  014A  294C               	goto	u33_21
  1070  014B  294D               	goto	u33_20
  1071  014C                     u33_21:
  1072  014C  294E               	goto	i1l61
  1073  014D                     u33_20:
  1074  014D                     i1l945:
  1075                           
  1076                           ;main.c: 61:     {;main.c: 62:         b_inc = 0;
  1077  014D  100B               	bcf	11,0	;volatile
  1078  014E                     i1l61:	
  1079                           ;main.c: 64:     }
  1080                           
  1081                           
  1082                           ;main.c: 66:     if (PORTBbits.RB1 == 1)
  1083  014E  1D0B               	btfss	11,2	;volatile
  1084  014F  2951               	goto	u34_21
  1085  0150  2952               	goto	u34_20
  1086  0151                     u34_21:
  1087  0151  295B               	goto	i1l63
  1088  0152                     u34_20:
  1089  0152                     i1l947:
  1090                           
  1091                           ;main.c: 67:     {;main.c: 68:         b_dec = 1;
  1092  0152  110B               	bcf	11,2	;volatile
  1093  0153                     i1l949:
  1094                           
  1095                           ;main.c: 69:     }
  1096  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0155  082C               	movf	_v_tmr0,w
  1099  0156  0081               	movwf	1	;volatile
  1100  0157                     i1l951:
  1101                           
  1102                           ;main.c: 70:     if (PORTBbits.RB1 == 0 && b_dec == 1)
  1103  0157  3001               	movlw	1
  1104  0158  00F0               	movwf	??_ISR
  1105  0159  0870               	movf	??_ISR,w
  1106  015A  0788               	addwf	8,f	;volatile
  1107  015B                     i1l63:
  1108  015B  0872               	movf	??_ISR+2,w
  1109  015C  008A               	movwf	10
  1110  015D  0E71               	swapf	??_ISR+1,w
  1111  015E  0083               	movwf	3
  1112  015F  0EFE               	swapf	btemp,f
  1113  0160  0E7E               	swapf	btemp,w
  1114  0161  0009               	retfie
  1115  0162                     __end_of_ISR:
  1116  007E                     btemp	set	126	;btemp
  1117  007E                     wtemp0	set	126
  1118                           
  1119                           	psect	intentry
  1120  0004                     __pintentry:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1123                           
  1124  0004                     interrupt_function:
  1125  007E                     saved_w	set	btemp
  1126  0004  00FE               	movwf	btemp
  1127  0005  0E03               	swapf	3,w
  1128  0006  00F1               	movwf	??_ISR+1
  1129  0007  080A               	movf	10,w
  1130  0008  00F2               	movwf	??_ISR+2
  1131  0009  120A  118A  2949   	ljmp	_ISR
  1132                           
  1133                           	psect	config
  1134                           
  1135                           ;Config register CONFIG1 @ 0x2007
  1136                           ;	Oscillator Selection bits
  1137                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1138                           ;	Watchdog Timer Enable bit
  1139                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1140                           ;	Power-up Timer Enable bit
  1141                           ;	PWRTE = OFF, PWRT disabled
  1142                           ;	RE3/MCLR pin function select bit
  1143                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1144                           ;	Code Protection bit
  1145                           ;	CP = OFF, Program memory code protection is disabled
  1146                           ;	Data Code Protection bit
  1147                           ;	CPD = OFF, Data memory code protection is disabled
  1148                           ;	Brown Out Reset Selection bits
  1149                           ;	BOREN = OFF, BOR disabled
  1150                           ;	Internal External Switchover bit
  1151                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1152                           ;	Fail-Safe Clock Monitor Enabled bit
  1153                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1154                           ;	Low Voltage Programming Enable bit
  1155                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1156                           ;	In-Circuit Debugger Mode bit
  1157                           ;	DEBUG = 0x1, unprogrammed default
  1158  2007                     	org	8199
  1159  2007  20D1               	dw	8401
  1160                           
  1161                           ;Config register CONFIG2 @ 0x2008
  1162                           ;	Brown-out Reset Selection bit
  1163                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1164                           ;	Flash Program Memory Self Write Enable bits
  1165                           ;	WRT = OFF, Write protection off
  1166  2008                     	org	8200
  1167  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      8      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _decimales->___awdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_decimales
    _decimales->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     848
                                              7 BANK0      1     1      0
                          _decimales
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decimales                                            3     3      0     848
                                              4 BANK0      3     3      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decimales
     ___awdiv
     ___bmul
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 13 22:12:12 2021

         ___bmul@product 0075                       l71 0134                       l81 00D7  
                     l69 0120                       l78 0112             ___awdiv@sign 0021  
                    l320 0084                      l193 0176                      l901 00F6  
                    l831 016C                      l911 0101                      l903 00F9  
                    l841 001F                      l833 016E                      l825 0163  
                    l921 0108                      l913 0102                      l905 00FC  
                    l851 0033                      l843 0023                      l835 0175  
                    l827 0164                      l931 010D                      l923 0109  
                    l915 0103                      l907 00FF                      l861 0049  
                    l853 0037                      l845 0028                      l829 0168  
                    l925 010A                      l917 0104                      l909 0100  
                    l871 0069                      l863 004D                      l855 0039  
                    l847 002A                      l839 001C                      l927 010B  
                    l919 0105                      l873 0070                      l865 0051  
                    l857 003F                      l849 002E                      l929 010C  
                    l867 0062                      l859 0042                      l875 0076  
                    l891 00E7                      l883 00D8                      l877 007B  
                    l869 0068                      l981 00A1                      l893 00EA  
                    l885 00DE                      l879 0080                      l983 00B1  
                    l895 00ED                      l887 00E1                      l991 011E  
                    l985 00C7                      l977 0085                      l897 00F0  
                    l889 00E4                      l993 0124                      l979 008B  
                    l899 00F3                      l995 0129                      l987 0113  
                    l997 012A                      l989 0118                      l999 012E  
                    u210 0168                      u211 0167                      u220 0175  
                    u221 0174                      u310 0076                      u230 0023  
                    u311 0075                      u231 0022                      u320 007B  
                    u240 002E                      u321 007A                      u305 006A  
                    u241 002D                      u250 003F                      u410 011E  
                    u251 003E                      u411 011D                      u420 0124  
                    u421 0123                      u270 0051                      u430 0129  
                    u271 0050                      u431 0128                      u440 0132  
                    u265 0043                      u441 0131                      u290 0062  
                    u450 0138                      u291 0061                      u451 0137  
                    u460 013D                      _ISR 0149                      u285 0052  
                    u461 013C                      u295 005E                     ?_ISR 0070  
                   l1001 0132                     l1003 0138                     l1005 013D  
                   l1007 013E                     l1009 0140                     _T0IF 005A  
                   i1l61 014E                     i1l63 015B                     _TMR0 0001  
                   _main 0113                     btemp 007E                     start 000C  
      ___bmul@multiplier 0076                    ??_ISR 0070                    ?_main 0070  
        __end_of___awdiv 0085                    _ANSEL 0188          ___awdiv@divisor 0073  
                  i1l951 0157                    i1l943 0149                    i1l945 014D  
                  i1l947 0152                    i1l949 0153          ___awdiv@counter 0020  
                  u33_20 014D                    u33_21 014C                    u34_20 0152  
                  u34_21 0151                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _b_dec 0079  
                  _b_inc 007A                    _count 002B                    _setup 00D8  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0149                   ??_main 0027  
       ___awdiv@dividend 0075                   ?_setup 0070                   _ANSELH 0189  
                 ___bmul 0162                ??___awdiv 0077         ___awdiv@quotient 0022  
                 _v_tmr0 002C                   _numero 0078                   saved_w 007E  
__end_of__initialization 0018      ___bmul@multiplicand 0073           __pcstackCOMMON 0070  
     __size_of_decimales 0053            __end_of_setup 0113           _OPTION_REGbits 0081  
                ??_setup 0073               __pbssBANK0 0028               __pmaintext 0113  
                ?___bmul 0073               __pintentry 0004        __end_of_decimales 00D8  
        __size_of___bmul 0015                  ___awdiv 001C                  _decenas 0029  
                __ptext1 00D8                  __ptext2 0085                  __ptext3 0162  
                __ptext4 001C                  __ptext5 0149             __size_of_ISR 0019  
   end_of_initialization 0018                _PORTBbits 0006           __end_of___bmul 0177  
    start_initialization 000F              __end_of_ISR 0162                 ??___bmul 0074  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
              _decimales 0085                __pnvBANK0 002C                 ?___awdiv 0073  
         __size_of_setup 003B        interrupt_function 0004                 _IOCBbits 0096  
             ?_decimales 0070         __size_of___awdiv 0069                 _centenas 002A  
          __size_of_main 0036              ??_decimales 0024                 _unidades 0028  
             _INTCONbits 000B                 intlevel1 0000  
