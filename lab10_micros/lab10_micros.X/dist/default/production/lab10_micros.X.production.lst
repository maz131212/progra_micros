

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May  9 22:37:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  001A                     _RCREG	set	26
   210  0019                     _TXREG	set	25
   211  0018                     _RCSTAbits	set	24
   212  0009                     _PORTE	set	9
   213  0008                     _PORTD	set	8
   214  0007                     _PORTC	set	7
   215  0006                     _PORTB	set	6
   216  0005                     _PORTA	set	5
   217  000C                     _PIR1bits	set	12
   218  009A                     _SPBRGH	set	154
   219  0099                     _SPBRG	set	153
   220  0098                     _TXSTAbits	set	152
   221  008F                     _OSCCONbits	set	143
   222  0089                     _TRISE	set	137
   223  0088                     _TRISD	set	136
   224  0087                     _TRISCbits	set	135
   225  0087                     _TRISC	set	135
   226  0086                     _TRISB	set	134
   227  0085                     _TRISA	set	133
   228  0187                     _BAUDCTLbits	set	391
   229  0189                     _ANSELH	set	393
   230  0188                     _ANSEL	set	392
   231                           
   232                           	psect	strings
   233  0016                     __pstrings:
   234  0016                     stringtab:
   235  0016                     __stringtab:
   236                           
   237                           ;	String table - string pointers are 2 bytes each
   238  0016  1BFF               	btfsc	btemp+1,7
   239  0017  2820               	ljmp	stringcode
   240  0018  1383               	bcf	3,7
   241  0019  187F               	btfsc	btemp+1,0
   242  001A  1783               	bsf	3,7
   243  001B  0800               	movf	0,w
   244  001C  0A84               	incf	4,f
   245  001D  1903               	skipnz
   246  001E  0AFF               	incf	btemp+1,f
   247  001F  0008               	return
   248  0020                     stringcode:
   249  0020  087F               	movf	btemp+1,w
   250  0021  397F               	andlw	127
   251  0022  008A               	movwf	10
   252  0023  0804               	movf	4,w
   253  0024  0A84               	incf	4,f
   254  0025  1903               	skipnz
   255  0026  0AFF               	incf	btemp+1,f
   256  0027  0082               	movwf	2
   257  0028                     __stringbase:
   258  0028                     __end_of__stringtab:
   259                           
   260                           	psect	stringtext
   261  0100                     __pstringtext:
   262  0100                     STR_6:
   263  0100  340D               	retlw	13
   264  0101  3420               	retlw	32	;' '
   265  0102  3449               	retlw	73	;'I'
   266  0103  346E               	retlw	110	;'n'
   267  0104  3467               	retlw	103	;'g'
   268  0105  3472               	retlw	114	;'r'
   269  0106  3465               	retlw	101	;'e'
   270  0107  3473               	retlw	115	;'s'
   271  0108  3465               	retlw	101	;'e'
   272  0109  3420               	retlw	32	;' '
   273  010A  3475               	retlw	117	;'u'
   274  010B  346E               	retlw	110	;'n'
   275  010C  3420               	retlw	32	;' '
   276  010D  3463               	retlw	99	;'c'
   277  010E  3461               	retlw	97	;'a'
   278  010F  3472               	retlw	114	;'r'
   279  0110  3461               	retlw	97	;'a'
   280  0111  3463               	retlw	99	;'c'
   281  0112  3474               	retlw	116	;'t'
   282  0113  3465               	retlw	101	;'e'
   283  0114  3472               	retlw	114	;'r'
   284  0115  3420               	retlw	32	;' '
   285  0116  3470               	retlw	112	;'p'
   286  0117  3461               	retlw	97	;'a'
   287  0118  3472               	retlw	114	;'r'
   288  0119  3461               	retlw	97	;'a'
   289  011A  3420               	retlw	32	;' '
   290  011B  3465               	retlw	101	;'e'
   291  011C  346C               	retlw	108	;'l'
   292  011D  3420               	retlw	32	;' '
   293  011E  3470               	retlw	112	;'p'
   294  011F  3475               	retlw	117	;'u'
   295  0120  3465               	retlw	101	;'e'
   296  0121  3472               	retlw	114	;'r'
   297  0122  3474               	retlw	116	;'t'
   298  0123  346F               	retlw	111	;'o'
   299  0124  3420               	retlw	32	;' '
   300  0125  3441               	retlw	65	;'A'
   301  0126  343A               	retlw	58	;':'
   302  0127  3420               	retlw	32	;' '
   303  0128  3400               	retlw	0
   304  0129                     STR_8:
   305  0129  340D               	retlw	13
   306  012A  3420               	retlw	32	;' '
   307  012B  3449               	retlw	73	;'I'
   308  012C  346E               	retlw	110	;'n'
   309  012D  3467               	retlw	103	;'g'
   310  012E  3472               	retlw	114	;'r'
   311  012F  3465               	retlw	101	;'e'
   312  0130  3473               	retlw	115	;'s'
   313  0131  3465               	retlw	101	;'e'
   314  0132  3420               	retlw	32	;' '
   315  0133  3475               	retlw	117	;'u'
   316  0134  346E               	retlw	110	;'n'
   317  0135  3420               	retlw	32	;' '
   318  0136  3463               	retlw	99	;'c'
   319  0137  3461               	retlw	97	;'a'
   320  0138  3472               	retlw	114	;'r'
   321  0139  3461               	retlw	97	;'a'
   322  013A  3463               	retlw	99	;'c'
   323  013B  3474               	retlw	116	;'t'
   324  013C  3465               	retlw	101	;'e'
   325  013D  3472               	retlw	114	;'r'
   326  013E  3420               	retlw	32	;' '
   327  013F  3470               	retlw	112	;'p'
   328  0140  3461               	retlw	97	;'a'
   329  0141  3472               	retlw	114	;'r'
   330  0142  3461               	retlw	97	;'a'
   331  0143  3420               	retlw	32	;' '
   332  0144  3465               	retlw	101	;'e'
   333  0145  346C               	retlw	108	;'l'
   334  0146  3420               	retlw	32	;' '
   335  0147  3470               	retlw	112	;'p'
   336  0148  3475               	retlw	117	;'u'
   337  0149  3465               	retlw	101	;'e'
   338  014A  3472               	retlw	114	;'r'
   339  014B  3474               	retlw	116	;'t'
   340  014C  346F               	retlw	111	;'o'
   341  014D  3420               	retlw	32	;' '
   342  014E  3442               	retlw	66	;'B'
   343  014F  343A               	retlw	58	;':'
   344  0150  3420               	retlw	32	;' '
   345  0151  3400               	retlw	0
   346  0152                     STR_2:
   347  0152  3420               	retlw	32	;' '
   348  0153  3431               	retlw	49	;'1'
   349  0154  3429               	retlw	41	;')'
   350  0155  3420               	retlw	32	;' '
   351  0156  3444               	retlw	68	;'D'
   352  0157  3465               	retlw	101	;'e'
   353  0158  3473               	retlw	115	;'s'
   354  0159  3470               	retlw	112	;'p'
   355  015A  346C               	retlw	108	;'l'
   356  015B  3465               	retlw	101	;'e'
   357  015C  3467               	retlw	103	;'g'
   358  015D  3461               	retlw	97	;'a'
   359  015E  3472               	retlw	114	;'r'
   360  015F  3420               	retlw	32	;' '
   361  0160  3463               	retlw	99	;'c'
   362  0161  3461               	retlw	97	;'a'
   363  0162  3464               	retlw	100	;'d'
   364  0163  3465               	retlw	101	;'e'
   365  0164  346E               	retlw	110	;'n'
   366  0165  3461               	retlw	97	;'a'
   367  0166  3420               	retlw	32	;' '
   368  0167  3464               	retlw	100	;'d'
   369  0168  3465               	retlw	101	;'e'
   370  0169  3420               	retlw	32	;' '
   371  016A  3463               	retlw	99	;'c'
   372  016B  3461               	retlw	97	;'a'
   373  016C  3472               	retlw	114	;'r'
   374  016D  3461               	retlw	97	;'a'
   375  016E  3463               	retlw	99	;'c'
   376  016F  3474               	retlw	116	;'t'
   377  0170  3465               	retlw	101	;'e'
   378  0171  3472               	retlw	114	;'r'
   379  0172  3465               	retlw	101	;'e'
   380  0173  3473               	retlw	115	;'s'
   381  0174  3420               	retlw	32	;' '
   382  0175  340D               	retlw	13
   383  0176  3400               	retlw	0
   384  0177                     STR_11:
   385  0177  3420               	retlw	32	;' '
   386  0178  3444               	retlw	68	;'D'
   387  0179  3465               	retlw	101	;'e'
   388  017A  3462               	retlw	98	;'b'
   389  017B  3465               	retlw	101	;'e'
   390  017C  3420               	retlw	32	;' '
   391  017D  3469               	retlw	105	;'i'
   392  017E  346E               	retlw	110	;'n'
   393  017F  3467               	retlw	103	;'g'
   394  0180  3472               	retlw	114	;'r'
   395  0181  3465               	retlw	101	;'e'
   396  0182  3473               	retlw	115	;'s'
   397  0183  3461               	retlw	97	;'a'
   398  0184  3472               	retlw	114	;'r'
   399  0185  3420               	retlw	32	;' '
   400  0186  3473               	retlw	115	;'s'
   401  0187  346F               	retlw	111	;'o'
   402  0188  346C               	retlw	108	;'l'
   403  0189  346F               	retlw	111	;'o'
   404  018A  3420               	retlw	32	;' '
   405  018B  3427               	retlw	39	;'''
   406  018C  3431               	retlw	49	;'1'
   407  018D  3427               	retlw	39	;'''
   408  018E  3420               	retlw	32	;' '
   409  018F  3427               	retlw	39	;'''
   410  0190  3432               	retlw	50	;'2'
   411  0191  3427               	retlw	39	;'''
   412  0192  3420               	retlw	32	;' '
   413  0193  346F               	retlw	111	;'o'
   414  0194  3420               	retlw	32	;' '
   415  0195  3427               	retlw	39	;'''
   416  0196  3433               	retlw	51	;'3'
   417  0197  3427               	retlw	39	;'''
   418  0198  3420               	retlw	32	;' '
   419  0199  340D               	retlw	13
   420  019A  3400               	retlw	0
   421  019B                     STR_1:
   422  019B  340D               	retlw	13
   423  019C  3420               	retlw	32	;' '
   424  019D  3451               	retlw	81	;'Q'
   425  019E  3475               	retlw	117	;'u'
   426  019F  3465               	retlw	101	;'e'
   427  01A0  3420               	retlw	32	;' '
   428  01A1  3461               	retlw	97	;'a'
   429  01A2  3463               	retlw	99	;'c'
   430  01A3  3463               	retlw	99	;'c'
   431  01A4  3469               	retlw	105	;'i'
   432  01A5  346F               	retlw	111	;'o'
   433  01A6  346E               	retlw	110	;'n'
   434  01A7  3420               	retlw	32	;' '
   435  01A8  3464               	retlw	100	;'d'
   436  01A9  3465               	retlw	101	;'e'
   437  01AA  3473               	retlw	115	;'s'
   438  01AB  3465               	retlw	101	;'e'
   439  01AC  3461               	retlw	97	;'a'
   440  01AD  3420               	retlw	32	;' '
   441  01AE  3465               	retlw	101	;'e'
   442  01AF  346A               	retlw	106	;'j'
   443  01B0  3465               	retlw	101	;'e'
   444  01B1  3463               	retlw	99	;'c'
   445  01B2  3475               	retlw	117	;'u'
   446  01B3  3474               	retlw	116	;'t'
   447  01B4  3461               	retlw	97	;'a'
   448  01B5  3472               	retlw	114	;'r'
   449  01B6  343F               	retlw	63	;'?'
   450  01B7  3420               	retlw	32	;' '
   451  01B8  340D               	retlw	13
   452  01B9  3400               	retlw	0
   453  01BA                     STR_10:
   454  01BA  3421               	retlw	33	;'!'
   455  01BB  3421               	retlw	33	;'!'
   456  01BC  3421               	retlw	33	;'!'
   457  01BD  3421               	retlw	33	;'!'
   458  01BE  3421               	retlw	33	;'!'
   459  01BF  3421               	retlw	33	;'!'
   460  01C0  3421               	retlw	33	;'!'
   461  01C1  3421               	retlw	33	;'!'
   462  01C2  3445               	retlw	69	;'E'
   463  01C3  3452               	retlw	82	;'R'
   464  01C4  3452               	retlw	82	;'R'
   465  01C5  344F               	retlw	79	;'O'
   466  01C6  3452               	retlw	82	;'R'
   467  01C7  3421               	retlw	33	;'!'
   468  01C8  3421               	retlw	33	;'!'
   469  01C9  3421               	retlw	33	;'!'
   470  01CA  3421               	retlw	33	;'!'
   471  01CB  3421               	retlw	33	;'!'
   472  01CC  3421               	retlw	33	;'!'
   473  01CD  3421               	retlw	33	;'!'
   474  01CE  3420               	retlw	32	;' '
   475  01CF  340D               	retlw	13
   476  01D0  3400               	retlw	0
   477  01D1                     STR_4:
   478  01D1  3420               	retlw	32	;' '
   479  01D2  3433               	retlw	51	;'3'
   480  01D3  3429               	retlw	41	;')'
   481  01D4  3420               	retlw	32	;' '
   482  01D5  3443               	retlw	67	;'C'
   483  01D6  3461               	retlw	97	;'a'
   484  01D7  346D               	retlw	109	;'m'
   485  01D8  3462               	retlw	98	;'b'
   486  01D9  3469               	retlw	105	;'i'
   487  01DA  3461               	retlw	97	;'a'
   488  01DB  3472               	retlw	114	;'r'
   489  01DC  3420               	retlw	32	;' '
   490  01DD  3450               	retlw	80	;'P'
   491  01DE  344F               	retlw	79	;'O'
   492  01DF  3452               	retlw	82	;'R'
   493  01E0  3454               	retlw	84	;'T'
   494  01E1  3442               	retlw	66	;'B'
   495  01E2  3420               	retlw	32	;' '
   496  01E3  340D               	retlw	13
   497  01E4  3420               	retlw	32	;' '
   498  01E5  3400               	retlw	0
   499  01E6                     STR_3:
   500  01E6  3420               	retlw	32	;' '
   501  01E7  3432               	retlw	50	;'2'
   502  01E8  3429               	retlw	41	;')'
   503  01E9  3420               	retlw	32	;' '
   504  01EA  3443               	retlw	67	;'C'
   505  01EB  3461               	retlw	97	;'a'
   506  01EC  346D               	retlw	109	;'m'
   507  01ED  3462               	retlw	98	;'b'
   508  01EE  3469               	retlw	105	;'i'
   509  01EF  3461               	retlw	97	;'a'
   510  01F0  3472               	retlw	114	;'r'
   511  01F1  3420               	retlw	32	;' '
   512  01F2  3450               	retlw	80	;'P'
   513  01F3  344F               	retlw	79	;'O'
   514  01F4  3452               	retlw	82	;'R'
   515  01F5  3454               	retlw	84	;'T'
   516  01F6  3441               	retlw	65	;'A'
   517  01F7  3420               	retlw	32	;' '
   518  01F8  340D               	retlw	13
   519  01F9  3400               	retlw	0
   520  01FA                     STR_5:
   521  01FA  340D               	retlw	13
   522  01FB  3420               	retlw	32	;' '
   523  01FC  3448               	retlw	72	;'H'
   524  01FD  346F               	retlw	111	;'o'
   525  01FE  346C               	retlw	108	;'l'
   526  01FF  3461               	retlw	97	;'a'
   527  0200  3420               	retlw	32	;' '
   528  0201  346D               	retlw	109	;'m'
   529  0202  3475               	retlw	117	;'u'
   530  0203  346E               	retlw	110	;'n'
   531  0204  3464               	retlw	100	;'d'
   532  0205  346F               	retlw	111	;'o'
   533  0206  3420               	retlw	32	;' '
   534  0207  340D               	retlw	13
   535  0208  3400               	retlw	0
   536  0209                     STR_7:
   537  0209  340D               	retlw	13
   538  020A  3420               	retlw	32	;' '
   539  020B  344C               	retlw	76	;'L'
   540  020C  3469               	retlw	105	;'i'
   541  020D  3473               	retlw	115	;'s'
   542  020E  3474               	retlw	116	;'t'
   543  020F  346F               	retlw	111	;'o'
   544  0210  3420               	retlw	32	;' '
   545  0211  340D               	retlw	13
   546  0212  3400               	retlw	0
   547  0209                     
   548                           	psect	cinit
   549  000F                     start_initialization:	
   550                           ; #config settings
   551                           
   552  000F                     __initialization:
   553                           
   554                           ; Clear objects allocated to COMMON
   555  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   556  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   557  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   558  0012                     end_of_initialization:	
   559                           ;End of C runtime variable initialization code
   560                           
   561  0012                     __end_of__initialization:
   562  0012  0183               	clrf	3
   563  0013  120A  118A  2A13   	ljmp	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMMON
   566  0077                     __pbssCOMMON:
   567  0077                     _bandera:
   568  0077                     	ds	1
   569  0078                     _recibido:
   570  0078                     	ds	1
   571  0079                     _caracter:
   572  0079                     	ds	1
   573                           
   574                           	psect	cstackCOMMON
   575  0070                     __pcstackCOMMON:
   576  0070                     ?_setup:
   577  0070                     ?_recibir:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_mostrar:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_ISR:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_ISR:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_main:	
   590                           ; 1 bytes @ 0x0
   591                           
   592                           
   593                           ; 1 bytes @ 0x0
   594  0070                     	ds	2
   595  0072                     ??_setup:
   596  0072                     ??_recibir:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ??_mostrar:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     mostrar@caracteres:	
   603                           ; 1 bytes @ 0x2
   604                           
   605                           
   606                           ; 1 bytes @ 0x2
   607  0072                     	ds	1
   608  0073                     ?_cadena:
   609  0073                     cadena@direccion:	
   610                           ; 1 bytes @ 0x3
   611                           
   612                           
   613                           ; 2 bytes @ 0x3
   614  0073                     	ds	2
   615  0075                     ??_cadena:
   616  0075                     ??_main:	
   617                           ; 1 bytes @ 0x5
   618                           
   619                           
   620                           ; 1 bytes @ 0x5
   621  0075                     	ds	2
   622                           
   623                           	psect	maintext
   624  0213                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 66 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B00/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          2       0       0       0       0
   647 ;;      Totals:         2       0       0       0       0
   648 ;;Total ram usage:        2 bytes
   649 ;; Hardware stack levels required when called:    3
   650 ;; This function calls:
   651 ;;		_cadena
   652 ;;		_mostrar
   653 ;;		_recibir
   654 ;;		_setup
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _main
   662  0213                     _main:
   663  0213                     l817:	
   664                           ;incstack = 0
   665                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   666                           
   667                           
   668                           ;main.c: 68:                     cadena("\r Ingrese un caracter para el puerto B: ");
   669  0213  120A  118A  22D6  120A  118A  	fcall	_setup
   670  0218                     l819:
   671                           
   672                           ;main.c: 75: 
   673  0218  309B               	movlw	low (STR_1| (0+32768))
   674  0219  00F3               	movwf	cadena@direccion
   675  021A  3081               	movlw	high (STR_1| (0+32768))
   676  021B  00F4               	movwf	cadena@direccion+1
   677  021C  120A  118A  2311  120A  118A  	fcall	_cadena
   678  0221                     l821:
   679                           
   680                           ;main.c: 76:                 default:
   681  0221  3052               	movlw	low (STR_2| (0+32768))
   682  0222  00F3               	movwf	cadena@direccion
   683  0223  3081               	movlw	high (STR_2| (0+32768))
   684  0224  00F4               	movwf	cadena@direccion+1
   685  0225  120A  118A  2311  120A  118A  	fcall	_cadena
   686  022A                     l823:
   687                           
   688                           ;main.c: 77:                     cadena("!!!!!!!!ERROR!!!!!!! \r");
   689  022A  30E6               	movlw	low (STR_3| (0+32768))
   690  022B  00F3               	movwf	cadena@direccion
   691  022C  3081               	movlw	high (STR_3| (0+32768))
   692  022D  00F4               	movwf	cadena@direccion+1
   693  022E  120A  118A  2311  120A  118A  	fcall	_cadena
   694  0233                     l825:
   695                           
   696                           ;main.c: 78:                     cadena(" Debe ingresar solo '1' '2' o '3' \r");
   697  0233  30D1               	movlw	low (STR_4| (0+32768))
   698  0234  00F3               	movwf	cadena@direccion
   699  0235  3081               	movlw	high (STR_4| (0+32768))
   700  0236  00F4               	movwf	cadena@direccion+1
   701  0237  120A  118A  2311  120A  118A  	fcall	_cadena
   702  023C                     l827:
   703                           
   704                           ;main.c: 80:         }
   705  023C  01F7               	clrf	_bandera
   706  023D  0AF7               	incf	_bandera,f
   707                           
   708                           ;main.c: 82:     }
   709  023E  2ACD               	goto	l859
   710  023F                     l71:
   711  023F  1283               	bcf	3,5	;RP0=0, select bank0
   712  0240  1303               	bcf	3,6	;RP1=0, select bank0
   713  0241  1E8C               	btfss	12,5	;volatile
   714  0242  2A44               	goto	u81
   715  0243  2A45               	goto	u80
   716  0244                     u81:
   717  0244  2A3F               	goto	l71
   718  0245                     u80:
   719  0245                     l829:
   720                           
   721                           ;main.c: 86: 
   722  0245  120A  118A  2343  120A  118A  	fcall	_recibir
   723  024A  00F5               	movwf	??_main
   724  024B  0875               	movf	??_main,w
   725  024C  00F9               	movwf	_caracter
   726                           
   727                           ;main.c: 88: 
   728  024D  2ABA               	goto	l857
   729  024E                     l831:
   730                           
   731                           ;main.c: 90: 
   732  024E  30FA               	movlw	low (STR_5| (0+32768))
   733  024F  00F3               	movwf	cadena@direccion
   734  0250  3081               	movlw	high (STR_5| (0+32768))
   735  0251  00F4               	movwf	cadena@direccion+1
   736  0252  120A  118A  2311  120A  118A  	fcall	_cadena
   737  0257                     l833:
   738                           
   739                           ;main.c: 91: 
   740  0257  01F7               	clrf	_bandera
   741                           
   742                           ;main.c: 92:     TRISA = 0;
   743  0258  2ACD               	goto	l859
   744  0259                     l835:
   745                           
   746                           ;main.c: 95:     PORTB = 0;
   747  0259  3000               	movlw	low (STR_6| (0+32768))
   748  025A  00F3               	movwf	cadena@direccion
   749  025B  3081               	movlw	high (STR_6| (0+32768))
   750  025C  00F4               	movwf	cadena@direccion+1
   751  025D  120A  118A  2311  120A  118A  	fcall	_cadena
   752  0262                     l78:	
   753                           ;main.c: 96:     TRISC = 0;
   754                           
   755  0262  1283               	bcf	3,5	;RP0=0, select bank0
   756  0263  1303               	bcf	3,6	;RP1=0, select bank0
   757  0264  1E8C               	btfss	12,5	;volatile
   758  0265  2A67               	goto	u91
   759  0266  2A68               	goto	u90
   760  0267                     u91:
   761  0267  2A62               	goto	l78
   762  0268                     u90:
   763  0268                     l837:
   764                           
   765                           ;main.c: 97:     TRISCbits.TRISC7 = 1;
   766  0268  120A  118A  2343  120A  118A  	fcall	_recibir
   767  026D  1283               	bcf	3,5	;RP0=0, select bank0
   768  026E  1303               	bcf	3,6	;RP1=0, select bank0
   769  026F  0085               	movwf	5	;volatile
   770  0270                     l839:
   771                           
   772                           ;main.c: 98:     PORTC = 0;
   773  0270  0878               	movf	_recibido,w
   774  0271  120A  118A  2337  120A  118A  	fcall	_mostrar
   775  0276                     l841:
   776                           
   777                           ;main.c: 99:     TRISD = 0;
   778  0276  3009               	movlw	low (STR_7| (0+32768))
   779  0277  00F3               	movwf	cadena@direccion
   780  0278  3082               	movlw	high (STR_7| (0+32768))
   781  0279  00F4               	movwf	cadena@direccion+1
   782  027A  120A  118A  2311  120A  118A  	fcall	_cadena
   783  027F  2A57               	goto	l833
   784  0280                     l845:
   785                           
   786                           ;main.c: 104:     ANSELH = 0;
   787  0280  3029               	movlw	low (STR_8| (0+32768))
   788  0281  00F3               	movwf	cadena@direccion
   789  0282  3081               	movlw	high (STR_8| (0+32768))
   790  0283  00F4               	movwf	cadena@direccion+1
   791  0284  120A  118A  2311  120A  118A  	fcall	_cadena
   792  0289                     l82:	
   793                           ;main.c: 105: 
   794                           
   795  0289  1283               	bcf	3,5	;RP0=0, select bank0
   796  028A  1303               	bcf	3,6	;RP1=0, select bank0
   797  028B  1E8C               	btfss	12,5	;volatile
   798  028C  2A8E               	goto	u101
   799  028D  2A8F               	goto	u100
   800  028E                     u101:
   801  028E  2A89               	goto	l82
   802  028F                     u100:
   803  028F                     l847:
   804                           
   805                           ;main.c: 106: 
   806  028F  120A  118A  2343  120A  118A  	fcall	_recibir
   807  0294  1283               	bcf	3,5	;RP0=0, select bank0
   808  0295  1303               	bcf	3,6	;RP1=0, select bank0
   809  0296  0086               	movwf	6	;volatile
   810  0297                     l849:
   811                           
   812                           ;main.c: 107:     OSCCONbits.IRCF = 0b0111;
   813  0297  0878               	movf	_recibido,w
   814  0298  120A  118A  2337  120A  118A  	fcall	_mostrar
   815  029D                     l851:
   816                           
   817                           ;main.c: 108:     OSCCONbits.SCS = 1;
   818  029D  3009               	movlw	low (STR_7| (0+32768))
   819  029E  00F3               	movwf	cadena@direccion
   820  029F  3082               	movlw	high (STR_7| (0+32768))
   821  02A0  00F4               	movwf	cadena@direccion+1
   822  02A1  120A  118A  2311  120A  118A  	fcall	_cadena
   823  02A6  2A57               	goto	l833
   824  02A7                     l855:
   825  02A7  30BA               	movlw	low (STR_10| (0+32768))
   826  02A8  00F3               	movwf	cadena@direccion
   827  02A9  3081               	movlw	high (STR_10| (0+32768))
   828  02AA  00F4               	movwf	cadena@direccion+1
   829  02AB  120A  118A  2311  120A  118A  	fcall	_cadena
   830  02B0  3077               	movlw	low (STR_11| (0+32768))
   831  02B1  00F3               	movwf	cadena@direccion
   832  02B2  3081               	movlw	high (STR_11| (0+32768))
   833  02B3  00F4               	movwf	cadena@direccion+1
   834  02B4  120A  118A  2311  120A  118A  	fcall	_cadena
   835  02B9  2ACD               	goto	l859
   836  02BA                     l857:
   837  02BA  0879               	movf	_caracter,w
   838  02BB  00F5               	movwf	??_main
   839  02BC  01F6               	clrf	??_main+1
   840                           
   841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   842                           ; Switch size 1, requested type "simple"
   843                           ; Number of cases is 1, Range of values is 0 to 0
   844                           ; switch strategies available:
   845                           ; Name         Instructions Cycles
   846                           ; simple_byte            4     3 (average)
   847                           ; direct_byte           11     8 (fixed)
   848                           ; jumptable            260     6 (fixed)
   849                           ;	Chosen strategy is simple_byte
   850  02BD  0876               	movf	??_main+1,w
   851  02BE  3A00               	xorlw	0	; case 0
   852  02BF  1903               	skipnz
   853  02C0  2AC2               	goto	l885
   854  02C1  2AA7               	goto	l855
   855  02C2                     l885:
   856                           
   857                           ; Switch size 1, requested type "simple"
   858                           ; Number of cases is 3, Range of values is 49 to 51
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte           10     6 (average)
   862                           ; direct_byte           20    11 (fixed)
   863                           ; jumptable            263     9 (fixed)
   864                           ;	Chosen strategy is simple_byte
   865  02C2  0875               	movf	??_main,w
   866  02C3  3A31               	xorlw	49	; case 49
   867  02C4  1903               	skipnz
   868  02C5  2A4E               	goto	l831
   869  02C6  3A03               	xorlw	3	; case 50
   870  02C7  1903               	skipnz
   871  02C8  2A59               	goto	l835
   872  02C9  3A01               	xorlw	1	; case 51
   873  02CA  1903               	skipnz
   874  02CB  2A80               	goto	l845
   875  02CC  2AA7               	goto	l855
   876  02CD                     l859:
   877                           
   878                           ;main.c: 82:     }
   879  02CD  0877               	movf	_bandera,w
   880  02CE  1D03               	btfss	3,2
   881  02CF  2AD1               	goto	u111
   882  02D0  2AD2               	goto	u110
   883  02D1                     u111:
   884  02D1  2A3F               	goto	l71
   885  02D2                     u110:
   886  02D2  2A18               	goto	l819
   887  02D3  120A  118A  280C   	ljmp	start
   888  02D6                     __end_of_main:
   889                           
   890                           	psect	text1
   891  02D6                     __ptext1:	
   892 ;; *************** function _setup *****************
   893 ;; Defined at:
   894 ;;		line 125 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _setup
   924  02D6                     _setup:
   925  02D6                     l703:	
   926                           ;incstack = 0
   927                           ; Regs used in _setup: [wreg+status,2+status,0]
   928                           
   929  02D6  1683               	bsf	3,5	;RP0=1, select bank1
   930  02D7  1303               	bcf	3,6	;RP1=0, select bank1
   931  02D8  0185               	clrf	5	;volatile
   932  02D9  1283               	bcf	3,5	;RP0=0, select bank0
   933  02DA  1303               	bcf	3,6	;RP1=0, select bank0
   934  02DB  0185               	clrf	5	;volatile
   935  02DC  1683               	bsf	3,5	;RP0=1, select bank1
   936  02DD  1303               	bcf	3,6	;RP1=0, select bank1
   937  02DE  0186               	clrf	6	;volatile
   938  02DF  1283               	bcf	3,5	;RP0=0, select bank0
   939  02E0  1303               	bcf	3,6	;RP1=0, select bank0
   940  02E1  0186               	clrf	6	;volatile
   941  02E2  1683               	bsf	3,5	;RP0=1, select bank1
   942  02E3  1303               	bcf	3,6	;RP1=0, select bank1
   943  02E4  0187               	clrf	7	;volatile
   944  02E5                     l705:
   945  02E5  1787               	bsf	7,7	;volatile
   946  02E6  1283               	bcf	3,5	;RP0=0, select bank0
   947  02E7  1303               	bcf	3,6	;RP1=0, select bank0
   948  02E8  0187               	clrf	7	;volatile
   949  02E9  1683               	bsf	3,5	;RP0=1, select bank1
   950  02EA  1303               	bcf	3,6	;RP1=0, select bank1
   951  02EB  0188               	clrf	8	;volatile
   952  02EC  1283               	bcf	3,5	;RP0=0, select bank0
   953  02ED  1303               	bcf	3,6	;RP1=0, select bank0
   954  02EE  0188               	clrf	8	;volatile
   955  02EF  1683               	bsf	3,5	;RP0=1, select bank1
   956  02F0  1303               	bcf	3,6	;RP1=0, select bank1
   957  02F1  0189               	clrf	9	;volatile
   958  02F2  1283               	bcf	3,5	;RP0=0, select bank0
   959  02F3  1303               	bcf	3,6	;RP1=0, select bank0
   960  02F4  0189               	clrf	9	;volatile
   961  02F5  1683               	bsf	3,5	;RP0=1, select bank3
   962  02F6  1703               	bsf	3,6	;RP1=1, select bank3
   963  02F7  0188               	clrf	8	;volatile
   964  02F8  0189               	clrf	9	;volatile
   965  02F9                     l707:
   966  02F9  3070               	movlw	112
   967  02FA  1683               	bsf	3,5	;RP0=1, select bank1
   968  02FB  1303               	bcf	3,6	;RP1=0, select bank1
   969  02FC  048F               	iorwf	15,f	;volatile
   970  02FD                     l709:
   971  02FD  140F               	bsf	15,0	;volatile
   972  02FE                     l711:
   973                           
   974                           ;main.c: 158:     TXSTAbits.SYNC = 0;
   975  02FE  1218               	bcf	24,4	;volatile
   976  02FF                     l713:
   977                           
   978                           ;main.c: 159:     TXSTAbits.BRGH = 1;
   979  02FF  1518               	bsf	24,2	;volatile
   980  0300                     l715:
   981                           
   982                           ;main.c: 160:     BAUDCTLbits.BRG16 = 1;
   983  0300  1683               	bsf	3,5	;RP0=1, select bank3
   984  0301  1703               	bsf	3,6	;RP1=1, select bank3
   985  0302  1587               	bsf	7,3	;volatile
   986  0303                     l717:
   987                           
   988                           ;main.c: 162:     SPBRG = 207;
   989  0303  30CF               	movlw	207
   990  0304  1683               	bsf	3,5	;RP0=1, select bank1
   991  0305  1303               	bcf	3,6	;RP1=0, select bank1
   992  0306  0099               	movwf	25	;volatile
   993  0307                     l719:
   994                           
   995                           ;main.c: 163:     SPBRGH = 0;
   996  0307  019A               	clrf	26	;volatile
   997  0308                     l721:
   998                           
   999                           ;main.c: 165:     RCSTAbits.SPEN = 1;
  1000  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1002  030A  1798               	bsf	24,7	;volatile
  1003  030B                     l723:
  1004                           
  1005                           ;main.c: 166:     RCSTAbits.RX9 = 0;
  1006  030B  1318               	bcf	24,6	;volatile
  1007  030C                     l725:
  1008                           
  1009                           ;main.c: 167:     RCSTAbits.CREN = 1;
  1010  030C  1618               	bsf	24,4	;volatile
  1011  030D                     l727:
  1012                           
  1013                           ;main.c: 168:     TXSTAbits.TXEN = 1;
  1014  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1015  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1016  030F  1698               	bsf	24,5	;volatile
  1017  0310                     l92:
  1018  0310  0008               	return
  1019  0311                     __end_of_setup:
  1020                           
  1021                           	psect	text2
  1022  0343                     __ptext2:	
  1023 ;; *************** function _recibir *****************
  1024 ;; Defined at:
  1025 ;;		line 181 in file "main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      unsigned char 
  1032 ;; Registers used:
  1033 ;;		wreg
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0
  1041 ;;      Temps:          1       0       0       0       0
  1042 ;;      Totals:         1       0       0       0       0
  1043 ;;Total ram usage:        1 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _recibir
  1055  0343                     _recibir:
  1056  0343                     l737:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _recibir: [wreg]
  1059                           
  1060                           
  1061                           ;main.c: 182:     recibido = RCREG;
  1062  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0345  081A               	movf	26,w	;volatile
  1065  0346  00F2               	movwf	??_recibir
  1066  0347  0872               	movf	??_recibir,w
  1067  0348  00F8               	movwf	_recibido
  1068                           
  1069                           ;main.c: 183:     return recibido;
  1070  0349  0878               	movf	_recibido,w
  1071  034A                     l101:
  1072  034A  0008               	return
  1073  034B                     __end_of_recibir:
  1074                           
  1075                           	psect	text3
  1076  0311                     __ptext3:	
  1077 ;; *************** function _cadena *****************
  1078 ;; Defined at:
  1079 ;;		line 186 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  direccion       2    3[COMMON] PTR unsigned char 
  1082 ;;		 -> STR_11(36), STR_10(23), STR_9(10), STR_8(41), 
  1083 ;;		 -> STR_7(10), STR_6(41), STR_5(15), STR_4(21), 
  1084 ;;		 -> STR_3(20), STR_2(37), STR_1(31), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         2       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0
  1099 ;;      Totals:         2       0       0       0       0
  1100 ;;Total ram usage:        2 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    2
  1103 ;; This function calls:
  1104 ;;		_mostrar
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _cadena
  1112  0311                     _cadena:
  1113  0311                     l809:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1116                           
  1117                           
  1118                           ;main.c: 187:     while (*direccion != '\0') {
  1119  0311  2B26               	goto	l815
  1120  0312                     l811:
  1121                           
  1122                           ;main.c: 188:         mostrar(*direccion);
  1123  0312  0874               	movf	cadena@direccion+1,w
  1124  0313  00FF               	movwf	btemp+1
  1125  0314  0873               	movf	cadena@direccion,w
  1126  0315  0084               	movwf	4
  1127  0316  120A  118A  2016  120A  118A  	fcall	stringtab
  1128  031B  120A  118A  2337  120A  118A  	fcall	_mostrar
  1129  0320                     l813:
  1130                           
  1131                           ;main.c: 189:         direccion++;
  1132  0320  3001               	movlw	1
  1133  0321  07F3               	addwf	cadena@direccion,f
  1134  0322  1803               	skipnc
  1135  0323  0AF4               	incf	cadena@direccion+1,f
  1136  0324  3000               	movlw	0
  1137  0325  07F4               	addwf	cadena@direccion+1,f
  1138  0326                     l815:
  1139                           
  1140                           ;main.c: 187:     while (*direccion != '\0') {
  1141  0326  0874               	movf	cadena@direccion+1,w
  1142  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0329  00FF               	movwf	btemp+1
  1145  032A  0873               	movf	cadena@direccion,w
  1146  032B  0084               	movwf	4
  1147  032C  120A  118A  2016  120A  118A  	fcall	stringtab
  1148  0331  3A00               	xorlw	0
  1149  0332  1D03               	skipz
  1150  0333  2B35               	goto	u71
  1151  0334  2B36               	goto	u70
  1152  0335                     u71:
  1153  0335  2B12               	goto	l811
  1154  0336                     u70:
  1155  0336                     l107:
  1156  0336  0008               	return
  1157  0337                     __end_of_cadena:
  1158                           
  1159                           	psect	text4
  1160  0337                     __ptext4:	
  1161 ;; *************** function _mostrar *****************
  1162 ;; Defined at:
  1163 ;;		line 176 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  caracteres      1    wreg     unsigned char 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  caracteres      1    2[COMMON] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         1       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0
  1180 ;;      Totals:         1       0       0       0       0
  1181 ;;Total ram usage:        1 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;;		_cadena
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _mostrar
  1194  0337                     _mostrar:
  1195                           
  1196                           ;incstack = 0
  1197                           ; Regs used in _mostrar: [wreg]
  1198                           ;mostrar@caracteres stored from wreg
  1199  0337  00F2               	movwf	mostrar@caracteres
  1200  0338                     l699:
  1201  0338                     l95:	
  1202                           ;main.c: 177:     while (TXSTAbits.TRMT == 0);
  1203                           
  1204  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1205  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1206  033A  1C98               	btfss	24,1	;volatile
  1207  033B  2B3D               	goto	u11
  1208  033C  2B3E               	goto	u10
  1209  033D                     u11:
  1210  033D  2B38               	goto	l95
  1211  033E                     u10:
  1212  033E                     l701:
  1213                           
  1214                           ;main.c: 178:     TXREG = caracteres;
  1215  033E  0872               	movf	mostrar@caracteres,w
  1216  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0341  0099               	movwf	25	;volatile
  1219  0342                     l98:
  1220  0342  0008               	return
  1221  0343                     __end_of_mostrar:
  1222                           
  1223                           	psect	text5
  1224  034B                     __ptext5:	
  1225 ;; *************** function _ISR *****************
  1226 ;; Defined at:
  1227 ;;		line 58 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		None
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0
  1243 ;;      Temps:          2       0       0       0       0
  1244 ;;      Totals:         2       0       0       0       0
  1245 ;;Total ram usage:        2 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		Interrupt level 1
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function _ISR
  1256  034B                     _ISR:
  1257  034B                     i1l63:
  1258  034B  0871               	movf	??_ISR+1,w
  1259  034C  008A               	movwf	10
  1260  034D  0E70               	swapf	??_ISR,w
  1261  034E  0083               	movwf	3
  1262  034F  0EFE               	swapf	btemp,f
  1263  0350  0E7E               	swapf	btemp,w
  1264  0351  0009               	retfie
  1265  0352                     __end_of_ISR:
  1266  007E                     btemp	set	126	;btemp
  1267  007E                     wtemp0	set	126
  1268                           
  1269                           	psect	intentry
  1270  0004                     __pintentry:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _ISR: []
  1273                           
  1274  0004                     interrupt_function:
  1275  007E                     saved_w	set	btemp
  1276  0004  00FE               	movwf	btemp
  1277  0005  0E03               	swapf	3,w
  1278  0006  00F0               	movwf	??_ISR
  1279  0007  080A               	movf	10,w
  1280  0008  00F1               	movwf	??_ISR+1
  1281  0009  120A  118A  2B4B   	ljmp	_ISR
  1282                           
  1283                           	psect	config
  1284                           
  1285                           ;Config register CONFIG1 @ 0x2007
  1286                           ;	Oscillator Selection bits
  1287                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1288                           ;	Watchdog Timer Enable bit
  1289                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1290                           ;	Power-up Timer Enable bit
  1291                           ;	PWRTE = OFF, PWRT disabled
  1292                           ;	RE3/MCLR pin function select bit
  1293                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1294                           ;	Code Protection bit
  1295                           ;	CP = OFF, Program memory code protection is disabled
  1296                           ;	Data Code Protection bit
  1297                           ;	CPD = OFF, Data memory code protection is disabled
  1298                           ;	Brown Out Reset Selection bits
  1299                           ;	BOREN = OFF, BOR disabled
  1300                           ;	Internal External Switchover bit
  1301                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1302                           ;	Fail-Safe Clock Monitor Enabled bit
  1303                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1304                           ;	Low Voltage Programming Enable bit
  1305                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1306                           ;	In-Circuit Debugger Mode bit
  1307                           ;	DEBUG = 0x1, unprogrammed default
  1308  2007                     	org	8199
  1309  2007  20D4               	dw	8404
  1310                           
  1311                           ;Config register CONFIG2 @ 0x2008
  1312                           ;	Brown-out Reset Selection bit
  1313                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1314                           ;	Flash Program Memory Self Write Enable bits
  1315                           ;	WRT = OFF, Write protection off
  1316  2008                     	org	8200
  1317  2008  3FFF               	dw	16383

Data Sizes:
    Strings     275
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@direccion	PTR unsigned char  size(2) Largest target is 41
		 -> STR_11(CODE[36]), STR_10(CODE[23]), STR_9(CODE[10]), STR_8(CODE[41]), 
		 -> STR_7(CODE[10]), STR_6(CODE[41]), STR_5(CODE[15]), STR_4(CODE[21]), 
		 -> STR_3(CODE[20]), STR_2(CODE[37]), STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_cadena
    _cadena->_mostrar

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     911
                                              5 COMMON     2     2      0
                             _cadena
                            _mostrar
                            _recibir
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               2     0      2     896
                                              3 COMMON     2     0      2
                            _mostrar
 ---------------------------------------------------------------------------------
 (1) _mostrar                                              1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
     _mostrar
   _mostrar
   _recibir
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May  9 22:37:48 2021

                      pc 0002                       l71 023F                       l82 0289  
                     l92 0310                       l78 0262                       l95 0338  
                     l98 0342                       u10 033E                       u11 033D  
                     u70 0336                       u71 0335                       u80 0245  
                     u81 0244                       u90 0268                       u91 0267  
                     fsr 0004                      l101 034A                      l107 0336  
                    l701 033E                      l711 02FE                      l703 02D6  
                    l721 0308                      l713 02FF                      l705 02E5  
                    l811 0312                      l723 030B                      l715 0300  
                    l707 02F9                      l813 0320                      l725 030C  
                    l717 0303                      l709 02FD                      l821 0221  
                    l815 0326                      l727 030D                      l719 0307  
                    l831 024E                      l823 022A                      l809 0311  
                    l737 0343                      l841 0276                      l833 0257  
                    l825 0233                      l817 0213                      l851 029D  
                    l835 0259                      l827 023C                      l819 0218  
                    l845 0280                      l837 0268                      l829 0245  
                    l855 02A7                      l847 028F                      l839 0270  
                    l849 0297                      l857 02BA                      l699 0338  
                    l859 02CD                      l885 02C2                      u100 028F  
                    u101 028E                      u110 02D2                      u111 02D1  
                    _ISR 034B                      fsr0 0004                      indf 0000  
                   ?_ISR 0070                     STR_1 019B                     STR_2 0152  
                   STR_3 01E6                     STR_4 01D1                     STR_5 01FA  
                   STR_6 0100                     STR_7 0209                     STR_8 0129  
                   STR_9 0209                     i1l63 034B                     _main 0213  
                   btemp 007E          cadena@direccion 0073                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    STR_10 01BA  
                  STR_11 0177                    _ANSEL 0188                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
        __end_of_recibir 034B                    _setup 02D6                    pclath 000A  
        __end_of_mostrar 0343                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 02D6                   ??_main 0075  
                 ?_setup 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _cadena 0311                ??_recibir 0072                   saved_w 007E  
              ??_mostrar 0072  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 0311                  ??_setup 0072               __pmaintext 0213  
                ?_cadena 0073               __pintentry 0004               __stringtab 0016  
        __size_of_cadena 0026                  _bandera 0077                  __ptext1 02D6  
                __ptext2 0343                  __ptext3 0311                  __ptext4 0337  
                __ptext5 034B             __size_of_ISR 0007                  _recibir 0343  
                _mostrar 0337     end_of_initialization 0012                _RCSTAbits 0018  
           __pstringtext 0100                _TRISCbits 0087                _TXSTAbits 0098  
         __end_of_cadena 0337              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_ISR 0352                 ??_cadena 0075              __pbssCOMMON 0077  
              ___latbits 0002                __pstrings 0016                 ?_recibir 0070  
               ?_mostrar 0070           __size_of_setup 003B        interrupt_function 0004  
               _PIR1bits 000C              __stringbase 0028        mostrar@caracteres 0072  
     __end_of__stringtab 0028                 _caracter 0079         __size_of_recibir 0008  
       __size_of_mostrar 000C            __size_of_main 00C3                 _recibido 0078  
               intlevel1 0000                stringcode 0020               _OSCCONbits 008F  
               stringtab 0016  
